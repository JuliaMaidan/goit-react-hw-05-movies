{"version":3,"file":"static/js/694.6bb1f773.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAKJ,IAAMC,EAAS,mCAAG,sGACAF,EAAAA,EAAAA,IAAU,oBADV,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,IADjB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAO,mCAAG,WAAMD,GAAN,yFACEL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADF,uBACbF,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPI,EAAU,mCAAG,WAAMF,GAAN,yFACDL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAUVK,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACNC,MAAOF,KAHoB,uBACvBN,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qD,8ICjC9B,GAAgB,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,2B,SC0CzF,EAtCgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQX,GAAOY,EAAAA,EAAAA,MAAPZ,GAWR,OATAa,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBX,EAAAA,EAAAA,IAAWF,GADhC,OACQF,EADR,OAEEW,EAAWX,GACXa,GAAa,GAHf,4CADc,uBAAC,WAAD,wBAMdG,EACD,GAAE,CAACd,KAGF,4BACE,SAAC,KAAD,CAAMe,GAAE,kBAAaf,GAArB,UACE,mBAAQgB,UAAWC,EAAAA,SAAnB,yBAEAP,IAAa,oCACdA,IACC,0BACE,gBAAIM,UAAWC,EAAAA,KAAf,UAC8B,IAA3BT,EAAQU,QAAQC,SACf,qEAEDX,EAAQU,QAAQE,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,gBAAIN,UAAWC,EAAAA,KAAf,WACE,eAAGD,UAAWC,EAAAA,OAAd,qBAAsCI,MACtC,cAAGL,UAAWC,EAAAA,KAAd,SAA4BK,MAFGtB,EADd,WAWhC,C","sources":["components/services/fetchMovies.js","webpack://react-homework-template/./src/pages/reviews.module.scss?0d80","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'e46f406ff40897ad9456c1375654d5d9',\n  // trends: '/movie_id',\n  // page: 1,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get('trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSimilad = async id => {\n  const { data } = await axios.get(`/movie/${id}/similar`);\n  return data;\n};\n\nexport const getSearchedMovies = async search => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"reviews_author__DgZ5S\",\"text\":\"reviews_text__gii8a\",\"collapse\":\"reviews_collapse__F9D5b\"};","import { useParams, Link } from 'react-router-dom';\nimport { getReviews } from 'components/services/fetchMovies';\nimport { useState, useEffect } from 'react';\nimport styles from './reviews.module.scss';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      const data = await getReviews(id);\n      setReviews(data);\n      setIsLoading(true);\n    }\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <div>\n      <Link to={`/movies/${id}`}>\n        <button className={styles.collapse}>Collapse</button>\n      </Link>\n      {!isLoading && <h1>Loading</h1>}\n      {isLoading && (\n        <div>\n          <ul className={styles.list}>\n            {reviews.results.length === 0 && (\n              <p>We don't have any reviews for this movie.</p>\n            )}\n            {reviews.results.map(({ id, author, content }) => (\n              <li className={styles.link} key={id}>\n                <p className={styles.author}>Author: {author}</p>\n                <p className={styles.text}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["axios","api_key","getMovies","data","getMovieById","id","getCast","getReviews","getSearchedMovies","search","params","query","useState","reviews","setReviews","isLoading","setIsLoading","useParams","useEffect","fetchReviews","to","className","styles","results","length","map","author","content"],"sourceRoot":""}