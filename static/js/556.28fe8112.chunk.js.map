{"version":3,"file":"static/js/556.28fe8112.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAKJ,IAAMC,EAAS,mCAAG,sGACAF,EAAAA,EAAAA,IAAU,oBADV,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,IADjB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAO,mCAAG,WAAMD,GAAN,yFACEL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADF,uBACbF,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPI,EAAU,mCAAG,WAAMF,GAAN,yFACDL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAUVK,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACNC,MAAOF,KAHoB,uBACvBN,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qD,8ICjC9B,GAAgB,IAAM,wBAAwB,KAAO,yBAAyB,QAAU,4BAA4B,SAAW,6BAA6B,eAAiB,mCAAmC,aAAe,iCAAiC,aAAe,kC,kBC6E/Q,EAvEmB,WAAO,IAAD,MAEjBS,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQf,GAAOgB,EAAAA,EAAAA,MAAPhB,GAWR,OATAiB,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBlB,EAAAA,EAAAA,IAAaC,GADlC,OACQF,EADR,OAEEe,EAAUf,GACViB,GAAa,GAHf,4CADc,uBAAC,WAAD,wBAMdG,EACD,GAAE,CAAClB,KAGF,4BACE,mBAAQmB,UAAWC,EAAAA,IAAnB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,KAAaC,GAAId,EAAlC,+BAIAO,IAAa,SAAC,IAAD,IACdA,IACC,4BACE,iBAAKK,UAAWC,EAAAA,QAAhB,WACE,gBACED,UAAWC,EAAAA,IACXE,IAAG,0CAAqCV,EAAOW,eAC/CC,IAAKZ,EAAOa,MACZC,OAAO,SAET,iBAAKP,UAAWC,EAAAA,cAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,oBACGR,EAAOa,aADV,QACmBb,EAAOe,KAD1B,KACkCf,EAAOgB,aADzC,QAGA,eAAGT,UAAWC,EAAAA,MAAd,yBAAyCR,EAAOiB,uBAGpD,eAAIV,UAAWC,EAAAA,SAAf,uBACA,cAAGD,UAAWC,EAAAA,eAAd,SAAsCR,EAAOkB,YAC7C,eAAIX,UAAWC,EAAAA,OAAf,qBACA,eAAID,UAAWC,EAAAA,aAAf,SACGR,EAAOmB,OAAOC,KAAI,gBAAGL,EAAH,EAAGA,KAAH,OACjB,eAAIR,UAAWC,EAAAA,aAAf,SACGO,GADsCA,EADxB,OAMrB,cAAGR,UAAWC,EAAAA,KAAd,qCACA,gBAAID,UAAWC,EAAAA,WAAf,WACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,WAAmBC,GAAE,kBAAarB,EAAb,SAAtC,qBAIF,yBACE,SAAC,KAAD,CAAMmB,UAAWC,EAAAA,WAAmBC,GAAE,kBAAarB,EAAb,YAAtC,2BAKJ,SAAC,KAAD,SAKT,C","sources":["components/services/fetchMovies.js","webpack://react-homework-template/./src/pages/aboutMovie.module.scss?f432","pages/AboutMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'e46f406ff40897ad9456c1375654d5d9',\n  // trends: '/movie_id',\n  // page: 1,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get('trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSimilad = async id => {\n  const { data } = await axios.get(`/movie/${id}/similar`);\n  return data;\n};\n\nexport const getSearchedMovies = async search => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"aboutMovie_btn__TEhlB\",\"link\":\"aboutMovie_link__BusIq\",\"wrapper\":\"aboutMovie_wrapper__pj1lV\",\"overview\":\"aboutMovie_overview__7s5aE\",\"overview__desc\":\"aboutMovie_overview__desc__ejfTp\",\"genres__list\":\"aboutMovie_genres__list__y7pCp\",\"genres__item\":\"aboutMovie_genres__item__yh7aT\"};","import { useParams, Link, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'components/services/fetchMovies';\nimport { useState, useEffect } from 'react';\nimport styles from './aboutMovie.module.scss';\nimport Spinner from 'components/Loader/Loader';\nimport { useLocation } from 'react-router';\n\nconst AboutMovie = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      const data = await getMovieById(id);\n      setMovies(data);\n      setIsLoading(true);\n    }\n    fetchMovies();\n  }, [id]);\n\n  return (\n    <div>\n      <button className={styles.btn}>\n        <Link className={styles.link} to={backLinkHref}>\n          Back to movies\n        </Link>\n      </button>\n      {!isLoading && <Spinner />}\n      {isLoading && (\n        <div>\n          <div className={styles.wrapper}>\n            <img\n              className={styles.img}\n              src={`https://image.tmdb.org/t/p/w780/${movies.backdrop_path}`}\n              alt={movies.title}\n              height=\"200\"\n            />\n            <div className={styles.wrapper__name}>\n              <h2 className={styles.title}>\n                {movies.title ?? movies.name} ({movies.release_date})\n              </h2>\n              <p className={styles.score}>User score: {movies.vote_average}</p>\n            </div>\n          </div>\n          <h3 className={styles.overview}>Overview</h3>\n          <p className={styles.overview__desc}>{movies.overview}</p>\n          <h4 className={styles.genres}>Genres</h4>\n          <ul className={styles.genres__list}>\n            {movies.genres.map(({ name }) => (\n              <li className={styles.genres__item} key={name}>\n                {name}\n              </li>\n            ))}\n          </ul>\n          <b className={styles.info}>Additional information</b>\n          <ul className={styles.info__list}>\n            <li>\n              <Link className={styles.info__link} to={`/movies/${id}/cast`}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link className={styles.info__link} to={`/movies/${id}/reviews`}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AboutMovie;\n"],"names":["axios","api_key","getMovies","data","getMovieById","id","getCast","getReviews","getSearchedMovies","search","params","query","backLinkHref","useLocation","state","from","useState","movies","setMovies","isLoading","setIsLoading","useParams","useEffect","fetchMovies","className","styles","to","src","backdrop_path","alt","title","height","name","release_date","vote_average","overview","genres","map"],"sourceRoot":""}